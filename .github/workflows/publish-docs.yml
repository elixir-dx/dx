on:
  workflow_call:
    inputs:
      elixir_version:
        required: true
        type: string
      otp_version:
        required: true
        type: string

permissions:
  contents: write

jobs:
  publish-docs:
    name: Publish
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4

    - name: Setup Erlang & Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ inputs.elixir_version }}
        otp-version: ${{ inputs.otp_version }}

    # Caching
    - name: Dependencies cache
      uses: actions/cache/restore@v4
      with:
        path: deps
        key: ${{ runner.os }}-deps-${{ hashFiles('mix.lock') }}

    - name: Build cache
      uses: actions/cache/restore@v4
      with:
        path: _build
        key: ${{ runner.os }}-build-dev-${{inputs.elixir_version}}-${{inputs.otp_version}}-${{ hashFiles('mix.lock') }}

    # Run
    - name: Override version
      run: echo '0.0.0' > VERSION

    - name: Generate docs
      run: mix docs

    - name: Replace source links
      run: find "./doc" -type f -name "*.html" -exec sed -i 's/\/blob\/v0.0.0\//\/blob\/${{ github.sha }}\//g' {} +

    - name: Replace package version
      run: find "./doc" -type f -name "*.html" -exec sed -i 's/v0.0.0/main/g' {} +

    - name: Add version list
      run: |
        curl -sS https://hex.pm/api/packages/dx \
        | jq -rc '[.releases | .[] | select(.has_docs) | {"latest": false, "version": ("v" + .version), "url": ("https://hexdocs.pm/dx/" + .version)}]' \
        | (echo -n 'var versionNodes = [{"latest":false,"version":"main",url:"https://elixir-dx.github.io/dx"},{"latest":true' && (cat | cut -c17-)) \
        | tee $GITHUB_WORKSPACE/doc/docs_config.js

    - name: Push docs
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: doc
